// –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–µ–Ω—é –∏–≥—Ä—ã
class GameMenu {
    constructor() {
        this.menuElement = document.getElementById('gameMenu');
        this.gameArea = document.getElementById('gameArea');
        this.levelMap = document.getElementById('levelMap');
        this.skinsWindow = document.getElementById('skinsWindow');
        this.playButton = document.getElementById('playButton');
        this.skinsButton = document.getElementById('skinsButton');
        this.menuMusicBtn = document.getElementById('menuMusicBtn');
        this.backToMenuBtn = document.getElementById('backToMenu');
        this.closeSkinsBtn = document.getElementById('closeSkins');
        this.backToMenuFromSkinsBtn = document.getElementById('backToMenuFromSkins');
        this.victoryWindow = document.getElementById('victoryWindow');
        this.nextLevelBtn = document.getElementById('nextLevelBtn');
        this.replayLevelBtn = document.getElementById('replayLevelBtn');
        this.backToMenuFromVictoryBtn = document.getElementById('backToMenuFromVictory');
        this.menuMusicWasPlaying = false; // –ó–∞–ø–æ–º–∏–Ω–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –º—É–∑—ã–∫–∏ –º–µ–Ω—é
        this.selectedLevel = 1; // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –≤—ã–±—Ä–∞–Ω —É—Ä–æ–≤–µ–Ω—å 1
        this.closeLevelMapBtn = document.getElementById('closeLevelMap');
        
        // –°–∫–∏–Ω—ã
        this.selectedPaddleSkin = 'classic';
        this.selectedBallSkin = 'classic';
        this.unlockedSkins = {
            paddle: ['classic', 'green', 'red', 'blue'],
            ball: ['classic']
        };
        
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –≤—Å–µ—Ö –≤–∞–∂–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
        if (!this.menuElement || !this.gameArea || !this.levelMap || !this.skinsWindow || !this.playButton || !this.skinsButton || !this.menuMusicBtn) {
            console.error('–û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ GameMenu: –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –æ–¥–∏–Ω –∏–∑ –≤–∞–∂–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –º–µ–Ω—é!');
            return;
        }
        this.init();
    }

    init() {
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–µ–Ω—é –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
        this.showMenu();
        
        // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ò–≥—Ä–∞—Ç—å"
        if (this.playButton) {
            this.playButton.addEventListener('click', () => {
                this.showLevelMap();
            });
        }

        // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–°–∫–∏–Ω—ã"
        if (this.skinsButton) {
            this.skinsButton.addEventListener('click', () => {
                this.showSkinsWindow();
            });
        }

        // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é" (–Ω–∞ –∫–∞—Ä—Ç–µ —É—Ä–æ–≤–Ω–µ–π)
        if (this.backToMenuBtn) {
            this.backToMenuBtn.addEventListener('click', () => {
                this.showMenu();
                this.levelMap.style.display = 'none'; // –Ø–≤–Ω–æ —Å–∫—Ä—ã–≤–∞–µ–º –∫–∞—Ä—Ç—É —É—Ä–æ–≤–Ω–µ–π
            });
        }

        // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –æ–∫–Ω–∞ —Å–∫–∏–Ω–æ–≤
        if (this.closeSkinsBtn) {
            this.closeSkinsBtn.addEventListener('click', () => {
                this.showMenu();
            });
        }

        if (this.backToMenuFromSkinsBtn) {
            this.backToMenuFromSkinsBtn.addEventListener('click', () => {
                this.showMenu();
            });
        }

        // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –æ–∫–Ω–∞ –ø–æ–±–µ–¥—ã
        if (this.nextLevelBtn) {
            this.nextLevelBtn.addEventListener('click', () => {
                this.nextLevel();
            });
        }

        if (this.replayLevelBtn) {
            this.replayLevelBtn.addEventListener('click', () => {
                this.replayLevel();
            });
        }

        if (this.backToMenuFromVictoryBtn) {
            this.backToMenuFromVictoryBtn.addEventListener('click', () => {
                this.showMenu();
            });
        }

        // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è —É—Ä–æ–≤–Ω–µ–π –Ω–∞ –∫–∞—Ä—Ç–µ
        this.addLevelMapHandlers();

        // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è —Å–∫–∏–Ω–æ–≤
        this.addSkinsHandlers();

        // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ –º—É–∑—ã–∫–∏ –≤ –º–µ–Ω—é
        if (this.menuMusicBtn) {
            this.menuMusicBtn.addEventListener('click', () => {
                this.toggleMenuMusic();
            });
        }

        // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–ª–∞–≤–∏—à–∏ Enter
        document.addEventListener('keydown', (e) => {
            if (e.key === 'Enter' && this.menuElement.style.display !== 'none') {
                this.showLevelMap();
            }
        });

        // –ö–Ω–æ–ø–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è –∫–∞—Ä—Ç—ã —É—Ä–æ–≤–Ω–µ–π (–∫—Ä–µ—Å—Ç–∏–∫)
        if (this.closeLevelMapBtn) {
            this.closeLevelMapBtn.addEventListener('click', () => {
                this.showMenu();
            });
        }
    }

    showMenu() {
        this.menuElement.style.display = 'flex';
        this.gameArea.style.display = 'none';
        this.levelMap.style.display = 'none'; // –Ø–≤–Ω–æ —Å–∫—Ä—ã–≤–∞–µ–º –∫–∞—Ä—Ç—É —É—Ä–æ–≤–Ω–µ–π
        this.skinsWindow.style.display = 'none';
        this.victoryWindow.style.display = 'none';
        
        // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏–≥—Ä—É –µ—Å–ª–∏ –æ–Ω–∞ –±—ã–ª–∞ –∑–∞–ø—É—â–µ–Ω–∞
        if (typeof game !== 'undefined' && game.isRunning) {
            game.stop();
        }
        
        // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –º—É–∑—ã–∫–∏ –º–µ–Ω—é
        this.restoreMenuMusic();
    }

    toggleMenuMusic() {
        if (typeof audioManager !== 'undefined') {
            if (audioManager.musicInterval) {
                // –ú—É–∑—ã–∫–∞ –∏–≥—Ä–∞–µ—Ç - –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º
                audioManager.stopBackgroundMusic();
                this.menuMusicWasPlaying = false;
                this.menuMusicBtn.textContent = 'üîá';
                this.menuMusicBtn.classList.add('disabled');
            } else {
                // –ú—É–∑—ã–∫–∞ –Ω–µ –∏–≥—Ä–∞–µ—Ç - –∑–∞–ø—É—Å–∫–∞–µ–º
                if (audioManager.audioContext && audioManager.audioContext.state === 'suspended') {
                    audioManager.audioContext.resume();
                }
                audioManager.startMenuMusic();
                this.menuMusicWasPlaying = true;
                this.menuMusicBtn.textContent = 'üéµ';
                this.menuMusicBtn.classList.remove('disabled');
            }
        }
    }

    restoreMenuMusic() {
        if (typeof audioManager !== 'undefined' && audioManager.musicEnabled) {
            if (this.menuMusicWasPlaying) {
                // –ï—Å–ª–∏ –º—É–∑—ã–∫–∞ –±—ã–ª–∞ –≤–∫–ª—é—á–µ–Ω–∞, –∑–∞–ø—É—Å–∫–∞–µ–º –µ—ë —Å–Ω–æ–≤–∞
                if (audioManager.audioContext && audioManager.audioContext.state === 'suspended') {
                    audioManager.audioContext.resume();
                }
                audioManager.startMenuMusic();
                this.menuMusicBtn.textContent = 'üéµ';
                this.menuMusicBtn.classList.remove('disabled');
            } else {
                // –ï—Å–ª–∏ –º—É–∑—ã–∫–∞ –±—ã–ª–∞ –≤—ã–∫–ª—é—á–µ–Ω–∞, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—ã–∫–ª—é—á–µ–Ω–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
                this.menuMusicBtn.textContent = 'üîá';
                this.menuMusicBtn.classList.add('disabled');
            }
        } else {
            // –ï—Å–ª–∏ –º—É–∑—ã–∫–∞ –æ—Ç–∫–ª—é—á–µ–Ω–∞ –≥–ª–æ–±–∞–ª—å–Ω–æ
            this.menuMusicBtn.textContent = 'üîá';
            this.menuMusicBtn.classList.add('disabled');
        }
    }

    updateMenuMusicButton() {
        if (typeof audioManager !== 'undefined') {
            if (audioManager.musicInterval) {
                this.menuMusicBtn.textContent = 'üéµ';
                this.menuMusicBtn.classList.remove('disabled');
            } else {
                this.menuMusicBtn.textContent = 'üîá';
                this.menuMusicBtn.classList.add('disabled');
            }
        }
    }

    showLevelMap() {
        this.menuElement.style.display = 'none';
        this.levelMap.style.display = 'flex';
    }

    addLevelMapHandlers() {
        const levelNodes = document.querySelectorAll('.level-node');
        levelNodes.forEach(node => {
            node.addEventListener('click', () => {
                const level = parseInt(node.dataset.level);
                if (level <= 5) { // –ü–æ–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã –≤—Å–µ 5 —É—Ä–æ–≤–Ω–µ–π
                    this.selectedLevel = level;
                    console.log(`–í—ã–±—Ä–∞–Ω —É—Ä–æ–≤–µ–Ω—å ${level}`);
                    this.startGame();
                }
            });
        });
    }

    showSkinsWindow() {
        this.menuElement.style.display = 'none';
        this.skinsWindow.style.display = 'flex';
        this.updateSkinsDisplay();
    }

    addSkinsHandlers() {
        const skinItems = document.querySelectorAll('.skin-item');
        skinItems.forEach(item => {
            item.addEventListener('click', () => {
                if (!item.classList.contains('locked')) {
                    const type = item.dataset.type;
                    const skin = item.dataset.skin;
                    this.selectSkin(type, skin);
                }
            });
        });
    }

    selectSkin(type, skin) {
        if (type === 'paddle') {
            this.selectedPaddleSkin = skin;
        } else if (type === 'ball') {
            this.selectedBallSkin = skin;
        }

        // –û–±–Ω–æ–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã
        document.querySelectorAll(`.skin-item[data-type="${type}"]`).forEach(item => {
            item.classList.remove('active');
        });
        document.querySelector(`.skin-item[data-type="${type}"][data-skin="${skin}"]`).classList.add('active');

        // –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–µ–≤—å—é
        this.updatePreview();
    }

    updatePreview() {
        const previewPaddle = document.getElementById('previewPaddle');
        const previewBall = document.getElementById('previewBall');

        // –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–µ–≤—å—é –¥–æ—Å–∫–∏
        previewPaddle.className = `preview-paddle ${this.selectedPaddleSkin}-paddle`;

        // –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–µ–≤—å—é —à–∞—Ä–∞
        previewBall.className = `preview-ball ${this.selectedBallSkin}-ball`;
    }

    updateSkinsDisplay() {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∫–∞–∫–∏–µ —Å–∫–∏–Ω—ã —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã
        const maxUnlockedLevel = this.getMaxUnlockedLevel();
        // –†–∞–∑–±–ª–æ–∫–∏—Ä—É–µ–º —Å–∫–∏–Ω —É–ª—ã–±–∫–∏ –ø–æ—Å–ª–µ 2 —É—Ä–æ–≤–Ω—è
        if (maxUnlockedLevel >= 2 && !this.unlockedSkins['ball'].includes('smiley')) {
            this.unlockSkin('ball', 'smiley');
        }
        // –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–∫–∏–Ω–æ–≤
        document.querySelectorAll('.skin-item').forEach(item => {
            const type = item.dataset.type;
            const skin = item.dataset.skin;
            const requirement = item.dataset.requirement;
            // –£–¥–∞–ª—è—é overlay, –µ—Å–ª–∏ –æ–Ω –±—ã–ª
            let overlay = item.querySelector('.overlay');
            if (overlay) overlay.remove();
            // –°–∫—Ä—ã–≤–∞—é —Å–∫–∏–Ω '—É–ª—ã–±–∫–∞', –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å –≤ DOM, –Ω–æ –Ω–µ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω
            if (skin === 'smiley' && !this.unlockedSkins[type].includes('smiley')) {
                item.style.display = 'none';
            } else {
                item.style.display = '';
            }
        });
        // –ï—Å–ª–∏ —Å–∫–∏–Ω '—É–ª—ã–±–∫–∞' —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω, –Ω–æ –µ–≥–æ –Ω–µ—Ç –≤ DOM ‚Äî –¥–æ–±–∞–≤–ª—è—é
        if (this.unlockedSkins['ball'].includes('smiley')) {
            // –ò—â–µ–º .skin-category, –≥–¥–µ h3 —Å–æ–¥–µ—Ä–∂–∏—Ç '–®–∞—Ä'
            const categories = document.querySelectorAll('.skin-category');
            let grid = null;
            categories.forEach(cat => {
                const h3 = cat.querySelector('h3');
                if (h3 && h3.textContent.trim().toLowerCase().includes('—à–∞—Ä')) {
                    grid = cat.querySelector('.skin-grid');
                }
            });
            if (grid && !grid.querySelector('.skin-item[data-skin="smiley"]')) {
                const smiley = document.createElement('div');
                smiley.className = 'skin-item';
                smiley.dataset.type = 'ball';
                smiley.dataset.skin = 'smiley';
                smiley.innerHTML = '<div class="skin-ball smiley-ball"></div><span>–£–ª—ã–±–∫–∞</span>';
                grid.appendChild(smiley);
                // –î–æ–±–∞–≤–∏—Ç—å –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞
                smiley.addEventListener('click', () => {
                    this.selectSkin('ball', 'smiley');
                });
            }
        }
        this.updatePreview();
    }

    unlockSkin(type, skin) {
        if (!this.unlockedSkins[type].includes(skin)) {
            this.unlockedSkins[type].push(skin);
            this.updateSkinsDisplay(); // –î–æ–±–∞–≤–ª–µ–Ω–æ: –æ–±–Ω–æ–≤–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–æ—Å–ª–µ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏
        }
    }

    getMaxUnlockedLevel() {
        // –ß–∏—Ç–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å –∏–∑ localStorage
        return parseInt(localStorage.getItem('arkanoid_max_level') || '1', 10);
    }

    showVictoryWindow(level, time, score) {
        this.gameArea.style.display = 'none';
        this.victoryWindow.style.display = 'flex';
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å (–º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –¥–æ—Å—Ç–∏–≥–Ω—É—Ç—ã–π —É—Ä–æ–≤–µ–Ω—å)
        const prev = parseInt(localStorage.getItem('arkanoid_max_level') || '1', 10);
        if (level > prev) {
            localStorage.setItem('arkanoid_max_level', String(level));
        }
        
        // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        document.getElementById('victoryTime').textContent = time;
        document.getElementById('victoryScore').textContent = score;
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—É—â–∏–π —É—Ä–æ–≤–µ–Ω—å
        this.currentVictoryLevel = level;
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Å–ª–µ–¥—É—é—â–∏–π —É—Ä–æ–≤–µ–Ω—å
        if (level >= 5) {
            this.nextLevelBtn.style.display = 'none';
        } else {
            this.nextLevelBtn.style.display = 'block';
        }
    }

    nextLevel() {
        if (this.currentVictoryLevel < 5) {
            this.selectedLevel = this.currentVictoryLevel + 1;
            this.hideMenu();
            // –°–±—Ä–æ—Å –ø–æ–∫–∞–∑–∞ –æ–∫–Ω–∞ —Å–∫–∏–Ω–∞
            window._skinRewardShown = false;
            // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å
            if (typeof currentLevel !== 'undefined') {
                currentLevel = this.selectedLevel;
            }
            // –ó–∞–ø—É—Å–∫–∞–µ–º –∏–≥—Ä—É
            if (typeof initGame === 'function') {
                initGame();
            }
        }
    }

    replayLevel() {
        this.hideMenu();
        // –°–±—Ä–æ—Å –ø–æ–∫–∞–∑–∞ –æ–∫–Ω–∞ —Å–∫–∏–Ω–∞
        window._skinRewardShown = false;
        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ–∫—É—â–∏–π —É—Ä–æ–≤–µ–Ω—å
        if (typeof currentLevel !== 'undefined') {
            currentLevel = this.currentVictoryLevel;
        }
        // –ó–∞–ø—É—Å–∫–∞–µ–º –∏–≥—Ä—É
        if (typeof initGame === 'function') {
            initGame();
        }
    }

    hideMenu() {
        this.menuElement.style.display = 'none';
        this.levelMap.style.display = 'none';
        this.skinsWindow.style.display = 'none';
        this.victoryWindow.style.display = 'none';
        this.gameArea.style.display = 'block';
    }

    startGame() {
        // –ó–∞–ø–æ–º–∏–Ω–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –º—É–∑—ã–∫–∏ –º–µ–Ω—é –ø–µ—Ä–µ–¥ –ø–µ—Ä–µ—Ö–æ–¥–æ–º –≤ –∏–≥—Ä—É
        if (typeof audioManager !== 'undefined') {
            this.menuMusicWasPlaying = audioManager.musicInterval !== null;
        }
        
        this.hideMenu();
        this.levelMap.style.display = 'none'; // –Ø–≤–Ω–æ —Å–∫—Ä—ã–≤–∞–µ–º –∫–∞—Ä—Ç—É —É—Ä–æ–≤–Ω–µ–π –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ –∏–≥—Ä—ã
        
        // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –º–µ–Ω—é –º—É–∑—ã–∫—É –∏ –∑–∞–ø—É—Å–∫–∞–µ–º –∏–≥—Ä–æ–≤—É—é –º—É–∑—ã–∫—É
        if (typeof audioManager !== 'undefined') {
            audioManager.stopBackgroundMusic();
            if (audioManager.musicEnabled) {
                audioManager.startBackgroundMusic();
            }
        }
        
        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å
        if (typeof currentLevel !== 'undefined') {
            currentLevel = this.selectedLevel;
        }
        
        // –ó–∞–ø—É—Å–∫–∞–µ–º –∏–≥—Ä—É
        if (typeof startGame === 'function') {
            startGame();
        } else {
            // –ï—Å–ª–∏ —Ñ—É–Ω–∫—Ü–∏—è startGame –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞, –ø—Ä–æ—Å—Ç–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∏–≥—Ä—É
            if (typeof initGame === 'function') {
                initGame();
            }
        }
    }

    // –ú–µ—Ç–æ–¥ –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ø–æ—Å–ª–µ –ø—Ä–æ–∏–≥—Ä—ã—à–∞)
    returnToMenu() {
        // –°–∫—Ä—ã–≤–∞–µ–º –æ–∫–Ω–æ Game Over
        const gameoverDiv = document.getElementById('gameover');
        if (gameoverDiv) {
            gameoverDiv.style.display = 'none';
        }
        
        // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏–≥—Ä–æ–≤—É—é –º—É–∑—ã–∫—É
        if (typeof audioManager !== 'undefined') {
            audioManager.stopBackgroundMusic();
        }
        
        this.showMenu();
    }
}

// –°–æ–∑–¥–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä –º–µ–Ω—é
let gameMenu;
document.addEventListener('DOMContentLoaded', () => {
    gameMenu = new GameMenu();
});

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é –∏–∑ –∏–≥—Ä—ã
function returnToMenu() {
    gameMenu.returnToMenu();
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–≥—Ä—ã —Å–Ω–æ–≤–∞
function playAgain() {
    // –°–∫—Ä—ã–≤–∞–µ–º –æ–∫–Ω–æ Game Over
    const gameoverDiv = document.getElementById('gameover');
    if (gameoverDiv) {
        gameoverDiv.style.display = 'none';
    }
    
    // –ó–∞–ø—É—Å–∫–∞–µ–º –∏–≥—Ä–æ–≤—É—é –º—É–∑—ã–∫—É
    if (typeof audioManager !== 'undefined' && audioManager.musicEnabled) {
        audioManager.startBackgroundMusic();
    }
    
    if (typeof initGame === 'function') {
        initGame();
    }
} 